/*
 *   Neat NNTP Daemon (n3tpd)
 *   Copyright (C) 2007, 2008 by Christian Lins <christian.lins@web.de>
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package n3tpd.inspector;

import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import n3tpd.storage.Database;

/**
 *
 * @author Christian Lins (christian.lins@web.de)
 */
public class InspectorFrame extends javax.swing.JFrame {
  
  /** Creates new form InspectorFrame */
  public InspectorFrame() 
  {
    setTitle("n3tpd Database Inspector");
    initComponents();
    updateData();
  }
  
  /**
   * Loads the from the database into the components.
   */
  private void updateData()
  {
    try
    {
      Database db = Database.getInstance();
      
      lstGroups.setModel(new DefaultListModel());
      lstArticles.setModel(new DefaultListModel());
      
      // Load the groups from the database
      ResultSet rs = db.getGroups();
      while(rs.next())
      {
        ((DefaultListModel)lstGroups.getModel()).addElement(rs.getString("Name"));
      }
      
      // Load articles from the database
      rs = db.getArticles();
      while(rs.next())
      {
        ((DefaultListModel)lstArticles.getModel()).addElement(rs.getString("Subject"));
      }
    }
    catch(Exception ex)
    {
      ex.printStackTrace();
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    tabbedPane = new javax.swing.JTabbedPane();
    tabGroups = new javax.swing.JPanel();
    lstGroupsScrollPane = new javax.swing.JScrollPane();
    lstGroups = new javax.swing.JList();
    btnRefreshGroupList = new javax.swing.JButton();
    tabArticle = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    lstArticles = new javax.swing.JList();
    btnRefreshArticleList = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    lstGroups.setModel(new DefaultListModel());
    lstGroupsScrollPane.setViewportView(lstGroups);

    btnRefreshGroupList.setText("Refresh");
    btnRefreshGroupList.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnRefreshGroupListActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout tabGroupsLayout = new javax.swing.GroupLayout(tabGroups);
    tabGroups.setLayout(tabGroupsLayout);
    tabGroupsLayout.setHorizontalGroup(
      tabGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabGroupsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lstGroupsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        .addGap(18, 18, 18)
        .addComponent(btnRefreshGroupList)
        .addContainerGap())
    );
    tabGroupsLayout.setVerticalGroup(
      tabGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(tabGroupsLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(tabGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lstGroupsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
          .addComponent(btnRefreshGroupList))
        .addContainerGap())
    );

    tabbedPane.addTab("Groups", tabGroups);

    lstArticles.setModel(new DefaultListModel());
    jScrollPane1.setViewportView(lstArticles);

    btnRefreshArticleList.setText("Refresh");
    btnRefreshArticleList.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnRefreshArticleListActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout tabArticleLayout = new javax.swing.GroupLayout(tabArticle);
    tabArticle.setLayout(tabArticleLayout);
    tabArticleLayout.setHorizontalGroup(
      tabArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabArticleLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        .addGap(18, 18, 18)
        .addComponent(btnRefreshArticleList)
        .addContainerGap())
    );
    tabArticleLayout.setVerticalGroup(
      tabArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(tabArticleLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(tabArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
          .addComponent(btnRefreshArticleList))
        .addContainerGap())
    );

    tabbedPane.addTab("Articles", tabArticle);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnRefreshGroupListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshGroupListActionPerformed
    updateData();
  }//GEN-LAST:event_btnRefreshGroupListActionPerformed

  private void btnRefreshArticleListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshArticleListActionPerformed
    updateData();
  }//GEN-LAST:event_btnRefreshArticleListActionPerformed
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new InspectorFrame().setVisible(true);
      }
    });
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnRefreshArticleList;
  private javax.swing.JButton btnRefreshGroupList;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JList lstArticles;
  private javax.swing.JList lstGroups;
  private javax.swing.JScrollPane lstGroupsScrollPane;
  private javax.swing.JPanel tabArticle;
  private javax.swing.JPanel tabGroups;
  private javax.swing.JTabbedPane tabbedPane;
  // End of variables declaration//GEN-END:variables
  
}
